//sparse matrix
// sparse is method to save memry by saving only non zero entry with location in a triplet
#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int non;
    cout<<"Enter total nonzero values of the matrix";
    cin>>non;
    int values[3][non];
    cout<<"Enter the all non zer values first abt their position\n";
    for( int i=0; i<non; i++){
        cout<<"Enter row number ";
        cin>>values[i][0];
        cout<<"Enter col number ";
        cin>>values[i][1];
        cout<<"Enter value: ";
        cin>>values[i][2];
    }
    int f=0;
      cout<<"\nthe final matrix is:\n";\
     int r,c;
     cout<<"Enter the original matrix rows and col: ";
     cin>>r>>c;
    for( int i=0; i<r; i++){
        for( int j=0; j<c; j++){
            if( values[f][0]==i && values[f][1]==j && f<non){
                cout<< values[f][2]<<" ,";
                f++;
            }
            else cout<<0<<" ,";
            
        }
        cout<<endl;
    }
    
    //transpose
    // f=0;
    // cout<<"Transpose of the matrix is: \n";
    // for( int i=0; i<c; i++){
    //     for( int j=0; j<r; j++){
    //         if( values[f][0]==j && values[f][1]==i && f<non){
    //             cout<< values[f][2]<<" ,";
    //             f++;
    //         }
    //         else cout<<0<<" ,";
            
    //     }
    //     cout<<endl;
    // }
 
    //diagonal matrix
    /*
    int n;
    cout<<"Enter the number of diagonals ";
    cin>>n;
    int dia[n]={0};
    for( int i=0; i<n; i++){
        cin>> dia[i];
    }
    for( int i=0; i<6; i++){
        for( int j=0;j<5; j++){
            
        }
    }*/
}
